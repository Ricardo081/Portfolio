{"ast":null,"code":"export const initialState = {\n  basket: []\n}; //Selector\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.cost + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_BASKET':\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cannot remove product (item: ${action.id}) as its not in basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/flapp/Documents/GitHub/MERN/Practice/use/Buc-ees/client/src/local_storage/Reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","amount","item","cost","reducer","state","action","type","index","findIndex","basketItem","id","newBasket","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAC;AADiB,CAArB,C,CAIP;;AACA,OAAO,MAAMC,cAAc,GAAID,MAAD,IAC1BA,MAD0B,aAC1BA,MAD0B,uBAC1BA,MAAM,CAAEE,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,IAAL,GAAYF,MAA7C,EAAqD,CAArD,CADG;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHP,QAAAA,MAAM,EAAE,CAAC,GAAGO,KAAK,CAACP,MAAV,EAAkBQ,MAAM,CAACJ,IAAzB;AAFL,OAAP;;AAIJ,SAAK,oBAAL;AACI,YAAMM,KAAK,GAAGH,KAAK,CAACP,MAAN,CAAaW,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBL,MAAM,CAACK,EAD/B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACP,MAAV,CAAhB;;AACA,UAAIU,KAAK,IAAI,CAAb,EAAe;AACXI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAuB,CAAvB;AACH,OAFD,MAEK;AACDM,QAAAA,OAAO,CAACC,IAAR,CACK,gCAA+BT,MAAM,CAACK,EAAG,yBAD9C;AAGH;;AACD,aAAO,EACH,GAAGN,KADA;AAEHP,QAAAA,MAAM,EAAEc;AAFL,OAAP;;AAIJ;AACI,aAAOP,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    basket:[],\r\n}\r\n\r\n//Selector\r\nexport const getBasketTotal = (basket) =>\r\n    basket?.reduce((amount, item) => item.cost + amount, 0)\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'ADD_TO_BASKET':\r\n            return {\r\n                ...state,\r\n                basket: [...state.basket, action.item],\r\n            }\r\n        case \"REMOVE_FROM_BASKET\":\r\n            const index = state.basket.findIndex(\r\n                (basketItem) => basketItem.id === action.id\r\n            )\r\n            let newBasket = [...state.basket]\r\n            if (index >= 0){\r\n                newBasket.splice(index,1);\r\n            }else{\r\n                console.warn(\r\n                    `Cannot remove product (item: ${action.id}) as its not in basket!`\r\n                )\r\n            }\r\n            return {\r\n                ...state,\r\n                basket: newBasket\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}